{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/TrailsProfile.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\n\nvar TrailsProfile = function TrailsProfile(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTrail = _useState2[0],\n      setCurrentTrail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      favorited = _useState4[0],\n      setFavorited = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"get trail called\");\n    getTrail();\n  }, []);\n\n  var handleFavorite = function handleFavorite(e) {\n    e.preventDefault();\n    addToFavorites();\n    console.log(\"id\", props.match.params.id);\n  };\n\n  var addToFavorites = function addToFavorites() {\n    fetch('/favorites', {\n      body: JSON.stringify({\n        fav_trail_id: props.match.params.id\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    }).then(function (response) {\n      if (response.ok) {\n        setFavorited(true);\n      }\n    }).then(function () {\n      getTrail();\n    });\n  };\n\n  function getTrail() {\n    return _getTrail.apply(this, arguments);\n  }\n\n  function _getTrail() {\n    _getTrail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"https://www.hikingproject.com/data/get-trails-by-id?ids=\".concat(props.match.params.id, \"&key=200805451-d58078a69001bb6f37cb92b68bbebae3\"));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n\n              //all good?\n              if (response.status === 200) {\n                //check the console to make sure we have all the trails\n                console.log(\"data\", data.trails[0]); //populate the newTrails state array with data\n\n                setCurrentTrail(data.trails[0]);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getTrail.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, currentTrail && /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItemHeading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, currentTrail.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: currentTrail.imgSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListGroupItemText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, currentTrail.summary), /*#__PURE__*/React.createElement(ListGroupItemText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Current Trail Conditions for \", currentTrail.conditionDate, \":\\xA0\", currentTrail.conditionDetails, \" and \", currentTrail.conditionStatus))), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFavorite,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Favorite\"));\n};\n\nexport default TrailsProfile;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/TrailsProfile.js"],"names":["React","useState","useEffect","Button","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","TrailsProfile","props","currentTrail","setCurrentTrail","favorited","setFavorited","console","log","getTrail","handleFavorite","e","preventDefault","addToFavorites","match","params","id","fetch","body","JSON","stringify","fav_trail_id","headers","method","then","response","ok","json","data","status","trails","name","imgSmall","summary","conditionDate","conditionDetails","conditionStatus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {  Button, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap'\n\n\nconst TrailsProfile = (props) => {\n const [currentTrail, setCurrentTrail] = useState({})\n const [favorited, setFavorited] = useState(false)\n\nuseEffect(() => {\n  console.log(\"get trail called\")\n  getTrail()},[])\n\nconst handleFavorite = (e) =>{\n    e.preventDefault()\n    addToFavorites()\n    console.log(\"id\", props.match.params.id)\n}\n\nconst addToFavorites = () => {\n  fetch('/favorites', {\n    body: JSON.stringify({fav_trail_id: props.match.params.id}),\n    headers:{\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\"\n  })\n  .then(response => {\n    if (response.ok) {\n      setFavorited(true)\n    }\n  })\n  .then(() => {\n    getTrail()\n  })\n}\n\n  async function getTrail() {\n    try {\n      //GET data from the backend\n      let response = await fetch(`https://www.hikingproject.com/data/get-trails-by-id?ids=${props.match.params.id}&key=200805451-d58078a69001bb6f37cb92b68bbebae3`)\n        let data = await response.json();\n        //all good?\n        if(response.status === 200) {\n          //check the console to make sure we have all the trails\n          console.log(\"data\", data.trails[0])\n          //populate the newTrails state array with data\n          setCurrentTrail(data.trails[0])\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    return (\n      <>\n            <ListGroup>\n            { currentTrail &&\n                <ListGroupItem>\n                  <ListGroupItemHeading>{currentTrail.name}</ListGroupItemHeading>\n\n                  <img src={currentTrail.imgSmall} />\n\n                  <ListGroupItemText>\n                    {currentTrail.summary}\n                  </ListGroupItemText>\n\n                  <ListGroupItemText>\n                    Current Trail Conditions for {currentTrail.conditionDate}:&nbsp;\n                    { currentTrail.conditionDetails} and {currentTrail.conditionStatus}\n                  </ListGroupItemText>\n                </ListGroupItem>\n            }\n          </ListGroup>\n          <Button onClick={handleFavorite}>Favorite</Button>\n\n      </>\n    );\n}\n\nexport default TrailsProfile\n"]},"metadata":{},"sourceType":"module"}