{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/trailPartials/TrailsSearch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Container, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nvar TrailsSearch = function TrailsSearch(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTrails = _useState2[0],\n      setNewTrails = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: null,\n    longitude: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newForm = _useState4[0],\n      setNewForm = _useState4[1]; // useEffect(() => {\n  //   getTrails()},[])\n\n\n  var updateCord = function updateCord() {\n    setNewForm({\n      latitude: props.lat,\n      longitude: props.lng\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setNewForm(_objectSpread(_objectSpread({}, newForm), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    getTrails();\n    console.log(\"newTrails\", newTrails);\n    console.log(\"newForm\", newForm);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"The top 10 local trails\"), /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"latitude\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Latitude\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"latitude\",\n    value: newForm.latitude,\n    onChange: handleChange,\n    placeholder: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"longitude\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Longitude\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"longitude\",\n    value: newForm.longitude,\n    onChange: handleChange,\n    placeholder: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Let's Go Hiking\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: updateCord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Update Cords\"))));\n};\n\nexport default TrailsSearch;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/trailPartials/TrailsSearch.js"],"names":["React","useState","useEffect","Button","Form","FormGroup","Label","Input","Container","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","NavLink","TrailsSearch","props","newTrails","setNewTrails","latitude","longitude","newForm","setNewForm","updateCord","lat","lng","handleChange","e","target","name","value","handleSubmit","preventDefault","getTrails","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Button, Form, FormGroup, Label, Input, Container, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap'\nimport { NavLink } from 'react-router-dom'\n\n\nconst TrailsSearch = (props) => {\n\n  const [newTrails, setNewTrails] = useState([])\n  const [newForm, setNewForm] = useState({\n    latitude: null,\n    longitude: null\n  })\n  // useEffect(() => {\n  //   getTrails()},[])\n  const updateCord = () => {\n    setNewForm({latitude: props.lat, longitude: props.lng})\n  }\n\n    const handleChange = (e) =>{\n      setNewForm({\n        ...newForm,\n        [e.target.name]: e.target.value\n      })\n    }\n    const handleSubmit = (e) =>{\n      e.preventDefault()\n      getTrails()\n      console.log(\"newTrails\", newTrails);\n      console.log(\"newForm\", newForm)\n    }\n    \n\n      return (\n        <>\n        <h2>The top 10 local trails</h2>\n        <Container>\n          <Form>\n            <FormGroup>\n              <Label htmlFor=\"latitude\">Latitude</Label>\n                <Input type=\"text\" name=\"latitude\" value={ newForm.latitude } onChange={ handleChange } placeholder=\"\" />\n              <Label htmlFor=\"longitude\">Longitude</Label>\n                <Input type=\"text\" name=\"longitude\" value={ newForm.longitude } onChange={ handleChange } placeholder=\"\" />\n            </FormGroup>\n            <Button onClick={handleSubmit}>Let's Go Hiking</Button>\n            <Button onClick={updateCord}>Update Cords</Button>\n          </Form>\n        </Container>\n        </>\n      );\n    }\n\n    export default TrailsSearch\n"]},"metadata":{},"sourceType":"module"}