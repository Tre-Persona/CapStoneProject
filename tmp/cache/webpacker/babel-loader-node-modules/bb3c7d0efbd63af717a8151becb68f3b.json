{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/comments/CommentList.js\";\n\nimport React from 'react';\nimport { Button, FormGroup, Label, Input, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap';\n\nvar CommentList = function CommentList(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.comments.map(function (comment, index) {\n    var editable = false;\n    if (props.user_id === comment.user_id) editable = true;\n    var date = comment.updated_at.substring(0, 10);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, props.editArray.includes(comment.id) && /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"commentEditEntry\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 53\n      }\n    }, \"Edit Comment\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"commentEditEntry\",\n      id: \"commentEditEntry\",\n      value: \"hello\",\n      onChange: function onChange(e) {\n        return props.handleChangeEdit(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return props.updateComment(comment.id, comment.trail_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, \"Update\")), !props.editArray.includes(comment.id) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroupItemText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, comment.user_name), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 58\n      }\n    }, date)), /*#__PURE__*/React.createElement(ListGroupItemText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, comment.post)), editable && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return props.handleEditClick(comment.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, props.editArray.includes(comment.id) && \"Cancel\", !props.editArray.includes(comment.id) && \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      alt: \"delete comment\",\n      color: \"danger\",\n      onClick: function onClick() {\n        return props.deleteComment(comment.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, \"Delete\"))));\n  })));\n};\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/comments/CommentList.js"],"names":["React","Button","FormGroup","Label","Input","ListGroup","ListGroupItem","ListGroupItemText","CommentList","props","comments","map","comment","index","editable","user_id","date","updated_at","substring","editArray","includes","id","e","handleChangeEdit","updateComment","trail_id","user_name","post","handleEditClick","deleteComment"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, FormGroup, Label, Input, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap'\n\n\nconst CommentList = props => {\n  return(\n    <>\n      <ListGroup>\n      { props.comments.map((comment, index)=> {\n        let editable = false\n          if(props.user_id === comment.user_id) editable = true\n          let date = comment.updated_at.substring(0,10)\n        return(\n          <>\n            <ListGroupItem>\n              {props.editArray.includes(comment.id) &&\n                <FormGroup>\n                  <Label htmlFor=\"commentEditEntry\"><strong>Edit Comment</strong></Label>\n                  <Input type=\"textarea\" name=\"commentEditEntry\" id=\"commentEditEntry\" value=\"hello\" onChange={ (e) => props.handleChangeEdit(e) }/>\n                  <Button onClick={ () => props.updateComment(comment.id,comment.trail_id) }>Update</Button>\n                </FormGroup>\n              }\n              \n              {!props.editArray.includes(comment.id) &&\n                <>\n                  <ListGroupItemText>\n                    <strong>{comment.user_name}</strong> <i>{ date }</i>\n                  </ListGroupItemText>\n                  <ListGroupItemText>\n                    { comment.post }\n                  </ListGroupItemText>\n                </>\n              }\n              \n              { editable &&\n                <>\n                  <Button onClick={ () => props.handleEditClick(comment.id) }>\n                    {props.editArray.includes(comment.id) && \"Cancel\"}\n                    {!props.editArray.includes(comment.id) && \"Edit\"}\n                  </Button>\n                  <Button alt=\"delete comment\" color=\"danger\" onClick={ () => props.deleteComment(comment.id) }>Delete</Button>\n                </>\n              }\n            </ListGroupItem>\n          </>\n        )\n      })}\n      </ListGroup>\n    </>\n  )\n}\n\nexport default CommentList"]},"metadata":{},"sourceType":"module"}