{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/commentsPartials/CommentList.js\";\n\nimport React from 'react';\nimport { Button, FormGroup, Label, Input, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap';\nimport AvatarTest from '../images/avatar-test.png';\n\nvar CommentList = function CommentList(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"comments-list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, props.comments.map(function (comment, index) {\n    var editable = false;\n    if (props.user_id === comment.user_id) editable = true;\n    var date = comment.updated_at.substring(0, 10);\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"comments-list-item-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"comments-list-item-avatar\",\n      src: AvatarTest,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments-list-item-text-area\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, props.editArray.includes(comment.id) && /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"comments-list-item-edit-form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"comments-list-item-edit-form-label\",\n      htmlFor: \"commentEditEntry\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 100\n      }\n    }, \"Edit Comment\")), /*#__PURE__*/React.createElement(Input, {\n      className: \"comments-list-item-edit-form-input\",\n      type: \"textarea\",\n      name: \"commentEditEntry\",\n      id: \"commentEditEntry\",\n      value: props.commentEditEntry,\n      onChange: function onChange(e) {\n        return props.handleChangeEdit(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"comments-list-item-edit-form-submit\",\n      onClick: function onClick() {\n        return props.updateComment(comment.id, comment.trail_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    }, \"Update\")), !props.editArray.includes(comment.id) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroupItemText, {\n      className: \"comments-list-item-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-user-name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, comment.user_name), \", \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-date\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 87\n      }\n    }, date)), /*#__PURE__*/React.createElement(ListGroupItemText, {\n      className: \"comments-list-item-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, comment.post)), editable && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"comments-list-item-edit-button\",\n      onClick: function onClick() {\n        return props.handleEditClick(comment.id, comment.post);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, props.editArray.includes(comment.id) && \"Cancel\", !props.editArray.includes(comment.id) && \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"comments-list-item-delete-button\",\n      alt: \"delete comment\",\n      color: \"danger\",\n      onClick: function onClick() {\n        return props.deleteComment(comment.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, \"Delete\"))));\n  })));\n};\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/commentsPartials/CommentList.js"],"names":["React","Button","FormGroup","Label","Input","ListGroup","ListGroupItem","ListGroupItemText","AvatarTest","CommentList","props","comments","map","comment","index","editable","user_id","date","updated_at","substring","editArray","includes","id","commentEditEntry","e","handleChangeEdit","updateComment","trail_id","user_name","post","handleEditClick","deleteComment"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, FormGroup, Label, Input, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap'\nimport AvatarTest from '../images/avatar-test.png'\n\n\nconst CommentList = props => {\n  return(\n    <>\n      <ListGroup className=\"comments-list-group\">\n      { props.comments.map((comment, index)=> {\n        let editable = false\n          if(props.user_id === comment.user_id) editable = true\n          let date = comment.updated_at.substring(0,10)\n        return(\n          <ListGroupItem key={index} className=\"comments-list-item-wrapper\">\n\n            <img className=\"comments-list-item-avatar\" src={AvatarTest} />\n\n            <div className=\"comments-list-item-text-area\">\n              {props.editArray.includes(comment.id) &&\n                <FormGroup className=\"comments-list-item-edit-form-group\">\n                  <Label className=\"comments-list-item-edit-form-label\" htmlFor=\"commentEditEntry\"><strong>Edit Comment</strong></Label>\n                  <Input className=\"comments-list-item-edit-form-input\" type=\"textarea\" name=\"commentEditEntry\" id=\"commentEditEntry\" value={ props.commentEditEntry } onChange={ (e) => props.handleChangeEdit(e) }/>\n                  <Button className=\"comments-list-item-edit-form-submit\" onClick={ () => props.updateComment(comment.id,comment.trail_id) }>Update</Button>\n                </FormGroup>\n              }\n              \n              {!props.editArray.includes(comment.id) &&\n                <>\n                  <ListGroupItemText className=\"comments-list-item-title\">\n                    <span className=\"comment-user-name\">{ comment.user_name }</span>, <span className=\"comment-date\">{ date }</span>\n                  </ListGroupItemText>\n                  <ListGroupItemText className=\"comments-list-item-text\">\n                    { comment.post }\n                  </ListGroupItemText>\n                </>\n              }\n              \n              { editable &&\n                <>\n                  <Button className=\"comments-list-item-edit-button\" onClick={ () => props.handleEditClick(comment.id,comment.post) }>\n                    {props.editArray.includes(comment.id) && \"Cancel\"}\n                    {!props.editArray.includes(comment.id) && \"Edit\"}\n                  </Button>\n                  <Button className=\"comments-list-item-delete-button\" alt=\"delete comment\" color=\"danger\" onClick={ () => props.deleteComment(comment.id) }>Delete</Button>\n                </>\n              }\n            </div>\n          </ListGroupItem>\n        )\n      })}\n      </ListGroup>\n    </>\n  )\n}\n\nexport default CommentList"]},"metadata":{},"sourceType":"module"}