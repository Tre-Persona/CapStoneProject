{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/TrailsIndex.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\n\nvar TrailsIndex = function TrailsIndex() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTrails = _useState2[0],\n      setNewTrails = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: \"\",\n    longitude: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newForm = _useState4[0],\n      setNewForm = _useState4[1];\n\n  useEffect(function () {\n    getTrails();\n  }, []);\n\n  function getTrails() {\n    return _getTrails.apply(this, arguments);\n  }\n\n  function _getTrails() {\n    _getTrails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"https://www.hikingproject.com/data/get-trails?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&maxDistance=10&key=200805451-d58078a69001bb6f37cb92b68bbebae3\"));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n\n              //all good?\n              if (response.status === 200) {\n                //check the console to make sure we have all the cats\n                console.log(\"data\", data); //populate the newCats state array with data\n\n                setNewTrails(data);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getTrails.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"All of the fancy trails\"), /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Your Trails Search\"), /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"street_number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"street_number\",\n    value: form.street_number,\n    onChange: handleChange,\n    placeholder: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default TrailsIndex;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/TrailsIndex.js"],"names":["React","useState","useEffect","Button","Form","FormGroup","Label","Input","Container","TrailsIndex","newTrails","setNewTrails","latitude","longitude","newForm","setNewForm","getTrails","fetch","response","json","data","status","console","log","textAlign","form","street_number","handleChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,SAAhD,QAAiE,YAAjE;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBAEUR,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,MAEjBS,SAFiB;AAAA,MAENC,YAFM;;AAAA,mBAGMV,QAAQ,CAAC;AACrCW,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,SAAS,EAAE;AAF0B,GAAD,CAHd;AAAA;AAAA,MAGjBC,OAHiB;AAAA,MAGRC,UAHQ;;AAOxBb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,SAAS;AAAG,GADL,EACM,EADN,CAAT;;AAPwB,WAUPA,SAVO;AAAA;AAAA;;AAAA;AAAA,0EAUtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGyBC,KAAK,6DAAuDL,QAAvD,kBAAyEC,SAAzE,oEAH9B;;AAAA;AAGQK,cAAAA,QAHR;AAAA;AAAA,qBAIuBA,QAAQ,CAACC,IAAT,EAJvB;;AAAA;AAIUC,cAAAA,IAJV;;AAKM;AACA,kBAAGF,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA4B;AAC1B;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB,EAF0B,CAG1B;;AACAT,gBAAAA,YAAY,CAACS,IAAD,CAAZ;AACD;;AAXP;AAAA;;AAAA;AAAA;AAAA;AAaME,cAAAA,OAAO,CAACC,GAAR;;AAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVsB;AAAA;AAAA;;AA2BpB,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,eAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,eAAxB;AAAwC,IAAA,KAAK,EAAGC,IAAI,CAACC,aAArD;AAAqE,IAAA,QAAQ,EAAGC,YAAhF;AAA+F,IAAA,WAAW,EAAC,EAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAFF,CAFA,CADF;AAcD,CAzCL;;AA2CI,eAAelB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap'\n\n\nconst TrailsIndex = () => {\n\n  const [newTrails, setNewTrails] = useState([])\n  const [newForm, setNewForm] = useState({\n    latitude: \"\",\n    longitude: \"\"\n  })\n  useEffect(() => {\n    getTrails()},[])\n\n    async function getTrails() {\n      try {\n        //GET data from the backend\n        let response = await fetch(`https://www.hikingproject.com/data/get-trails?lat=${ latitude }&lon=${ longitude }&maxDistance=10&key=200805451-d58078a69001bb6f37cb92b68bbebae3`)\n          let data = await response.json();\n          //all good?\n          if(response.status === 200) {\n            //check the console to make sure we have all the cats\n            console.log(\"data\", data)\n            //populate the newCats state array with data\n            setNewTrails(data)\n          }\n        } catch (err) {\n          console.log(err)\n        }\n      }\n\n      return (\n        <>\n        <h2>All of the fancy trails</h2>\n        <Container>\n            <h3 style={{textAlign:\"center\"}}>Your Trails Search</h3>\n          <Form>\n            <FormGroup>\n              <Label htmlFor=\"street_number\">Address</Label>\n              <Input type=\"text\" name=\"street_number\" value={ form.street_number } onChange={ handleChange } placeholder=\"\" />\n            </FormGroup>\n          </Form>\n        </Container>\n        </>\n      );\n    }\n\n    export default TrailsIndex\n"]},"metadata":{},"sourceType":"module"}