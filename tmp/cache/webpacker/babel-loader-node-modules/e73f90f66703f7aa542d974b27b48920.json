{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/UserProfile.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Badges from '../partials/user/Badges';\nimport FavoritesList from '../partials/user/FavoritesList';\n\nvar UserProfile = function UserProfile(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      favTrails = _useState2[0],\n      setFavTrails = _useState2[1];\n\n  useEffect(function () {\n    getTrails();\n  }, []);\n\n  function getTrails() {\n    return _getTrails.apply(this, arguments);\n  }\n\n  function _getTrails() {\n    _getTrails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var favResponse, favData, trailsIdsArray, trailResponse, trailData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/favorites');\n\n            case 3:\n              favResponse = _context.sent;\n              _context.next = 6;\n              return favResponse.json();\n\n            case 6:\n              favData = _context.sent;\n\n              if (favResponse.ok) {\n                console.log(\"favData:\", favData); // Create array of just the ids of the trails favorited by current user\n\n                trailsIdsArray = favData.map(function (value) {\n                  return value.fav_trail_id;\n                });\n                console.log(\"Fav trail Ids:\", trailsIdsArray);\n              } //GET trail data from the API\n\n\n              _context.next = 10;\n              return fetch(\"https://www.hikingproject.com/data/get-trails-by-id?ids=\".concat(trailsIdsArray.join(\",\"), \"&key=200805451-d58078a69001bb6f37cb92b68bbebae3\"));\n\n            case 10:\n              trailResponse = _context.sent;\n              _context.next = 13;\n              return trailResponse.json();\n\n            case 13:\n              trailData = _context.sent;\n\n              if (trailResponse.ok) {\n                //check the console to make sure we have all the trails\n                console.log(\"data\", trailData.trails); //populate the newTrails state array with data\n\n                setFavTrails(trailData.trails);\n              }\n\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 17]]);\n    }));\n    return _getTrails.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"User Profile\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \" Hello \", props.user_name), /*#__PURE__*/React.createElement(FavoritesList, {\n    favTrails: favTrails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Badges, {\n    user_id: props.user_id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/UserProfile.js"],"names":["React","useEffect","useState","Badges","FavoritesList","UserProfile","props","favTrails","setFavTrails","getTrails","fetch","favResponse","json","favData","ok","console","log","trailsIdsArray","map","value","fav_trail_id","join","trailResponse","trailData","trails","user_name","user_id"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBACKJ,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACtBK,SADsB;AAAA,MACXC,YADW;;AAG7BP,EAAAA,SAAS,CAAC,YAAK;AACbQ,IAAAA,SAAS;AAAG,GADL,EACM,EADN,CAAT;;AAH6B,WAMdA,SANc;AAAA;AAAA;;AAAA;AAAA,0EAM7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAG4BC,KAAK,CAAC,YAAD,CAHjC;;AAAA;AAGQC,cAAAA,WAHR;AAAA;AAAA,qBAIwBA,WAAW,CAACC,IAAZ,EAJxB;;AAAA;AAIQC,cAAAA,OAJR;;AAOI,kBAAGF,WAAW,CAACG,EAAf,EAAmB;AACjBC,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,OAAxB,EADiB,CAEjB;;AACAI,gBAAAA,cAAc,GAAGJ,OAAO,CAACK,GAAR,CAAY,UAAAC,KAAK;AAAA,yBAAEA,KAAK,CAACC,YAAR;AAAA,iBAAjB,CAAjB;AACAL,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,cAA9B;AACD,eAZL,CAcI;;;AAdJ;AAAA,qBAe8BP,KAAK,mEAA4DO,cAAc,CAACI,IAAf,CAAoB,GAApB,CAA5D,qDAfnC;;AAAA;AAeQC,cAAAA,aAfR;AAAA;AAAA,qBAgB0BA,aAAa,CAACV,IAAd,EAhB1B;;AAAA;AAgBQW,cAAAA,SAhBR;;AAiBI,kBAAGD,aAAa,CAACR,EAAjB,EAAqB;AACnB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBO,SAAS,CAACC,MAA9B,EAFmB,CAGnB;;AACAhB,gBAAAA,YAAY,CAACe,SAAS,CAACC,MAAX,CAAZ;AACD;;AAtBL;AAAA;;AAAA;AAAA;AAAA;AAwBMT,cAAAA,OAAO,CAACC,GAAR;;AAxBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAN6B;AAAA;AAAA;;AAkC7B,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYV,KAAK,CAACmB,SAAlB,CAFF,eAGE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAElB,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAED,KAAK,CAACoB,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAYD,CA9CD;;AAgDA,eAAerB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Badges from '../partials/user/Badges'\nimport FavoritesList from '../partials/user/FavoritesList'\n\n\nconst UserProfile = (props) => {\n  const [favTrails, setFavTrails] = useState([])\n\n  useEffect(() =>{\n    getTrails()},[])\n\n  async function getTrails() {\n    try {\n      // Fetch JSON of favorites specific to current user\n      let favResponse = await fetch('/favorites')\n      let favData = await favResponse.json()\n      // Declare array to hold only favorited Ids to be used in trail fetch call\n      let trailsIdsArray\n      if(favResponse.ok) {\n        console.log(\"favData:\", favData)\n        // Create array of just the ids of the trails favorited by current user\n        trailsIdsArray = favData.map(value=>value.fav_trail_id)\n        console.log(\"Fav trail Ids:\", trailsIdsArray)\n      }\n\n      //GET trail data from the API\n      let trailResponse = await fetch(`https://www.hikingproject.com/data/get-trails-by-id?ids=${trailsIdsArray.join(\",\")}&key=200805451-d58078a69001bb6f37cb92b68bbebae3`)\n      let trailData = await trailResponse.json()\n      if(trailResponse.ok) {\n        //check the console to make sure we have all the trails\n        console.log(\"data\", trailData.trails)\n        //populate the newTrails state array with data\n        setFavTrails(trailData.trails)\n      }\n    } catch (err) {\n        console.log(err)\n      }\n  }\n\n  return (\n    <>\n      <h2>User Profile</h2>\n      <h4> Hello {props.user_name}</h4>\n      <FavoritesList \n        favTrails={favTrails}\n      />\n      <Badges \n        user_id={props.user_id}\n      />\n    </>\n  );\n}\n\nexport default UserProfile\n"]},"metadata":{},"sourceType":"module"}