{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/TrailsProfile.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\n\nvar TrailsProfile = function TrailsProfile(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTrail = _useState2[0],\n      setCurrentTrail = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"get trail called\");\n    getTrail();\n  }, []);\n\n  function getTrail() {\n    return _getTrail.apply(this, arguments);\n  }\n\n  function _getTrail() {\n    _getTrail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"https://www.hikingproject.com/data/get-trails-by-id?ids=\".concat(props.match.params.id, \"&key=200805451-d58078a69001bb6f37cb92b68bbebae3\"));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n\n              //all good?\n              if (response.status === 200) {\n                //check the console to make sure we have all the trails\n                console.log(\"data\", data.trails[0]); //populate the newTrails state array with data\n\n                setCurrentTrail(data.trails[0]);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getTrail.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"What a fancy trail profile\"), currentTrail && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \" \", currentTrail.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: currentTrail.imgSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Current Trail Conditions for \", currentTrail.conditionDate, \" : \", currentTrail.conditionDetails, \" and \", currentTrail.conditionStatus, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \" \", currentTrail.summary, \" \")));\n};\n\nexport default TrailsProfile;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/TrailsProfile.js"],"names":["React","useState","useEffect","TrailsProfile","props","currentTrail","setCurrentTrail","console","log","getTrail","fetch","match","params","id","response","json","data","status","trails","name","imgSmall","conditionDate","conditionDetails","conditionStatus","summary"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,kBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MACzBI,YADyB;AAAA,MACXC,eADW;;AAGjCJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,IAAAA,QAAQ;AAAG,GAFJ,EAEK,EAFL,CAAT;;AAHiC,WAOhBA,QAPgB;AAAA;AAAA;;AAAA;AAAA,yEAO/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGyBC,KAAK,mEAA4DN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,EAA/E,qDAH9B;;AAAA;AAGQC,cAAAA,QAHR;AAAA;AAAA,qBAIuBA,QAAQ,CAACC,IAAT,EAJvB;;AAAA;AAIUC,cAAAA,IAJV;;AAKM;AACA,kBAAGF,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA4B;AAC1B;AACAV,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBQ,IAAI,CAACE,MAAL,CAAY,CAAZ,CAApB,EAF0B,CAG1B;;AACAZ,gBAAAA,eAAe,CAACU,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAD,CAAf;AACD;;AAXP;AAAA;;AAAA;AAAA;AAAA;AAaMX,cAAAA,OAAO,CAACC,GAAR;;AAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAP+B;AAAA;AAAA;;AAuB7B,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEIH,YAAY,iBACZ,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,YAAY,CAACc,IAApB,CADF,eAEE;AAAK,IAAA,GAAG,EAAGd,YAAY,CAACe,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkCf,YAAY,CAACgB,aAA/C,SAAkEhB,YAAY,CAACiB,gBAA/E,WAAsGjB,YAAY,CAACkB,eAAnH,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOlB,YAAY,CAACmB,OAApB,MAJF,CAHJ,CADF;AAaH,CApCD;;AAsCA,eAAerB,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\n\nconst TrailsProfile = (props) => {\n const [currentTrail, setCurrentTrail] = useState({})\n\nuseEffect(() => {\n  console.log(\"get trail called\")\n  getTrail()},[])\n\n  async function getTrail() {\n    try {\n      //GET data from the backend\n      let response = await fetch(`https://www.hikingproject.com/data/get-trails-by-id?ids=${props.match.params.id}&key=200805451-d58078a69001bb6f37cb92b68bbebae3`)\n        let data = await response.json();\n        //all good?\n        if(response.status === 200) {\n          //check the console to make sure we have all the trails\n          console.log(\"data\", data.trails[0])\n          //populate the newTrails state array with data\n          setCurrentTrail(data.trails[0])\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    return (\n      <>\n        <h2>What a fancy trail profile</h2>\n        { currentTrail &&\n          <>\n            <h3> { currentTrail.name }</h3>\n            <img src={ currentTrail.imgSmall }/> \n            <h6>Current Trail Conditions for {currentTrail.conditionDate} : { currentTrail.conditionDetails} and {currentTrail.conditionStatus} </h6>\n            <h6> { currentTrail.summary} </h6>\n          </>\n        }\n      </>\n    );\n}\n\nexport default TrailsProfile"]},"metadata":{},"sourceType":"module"}