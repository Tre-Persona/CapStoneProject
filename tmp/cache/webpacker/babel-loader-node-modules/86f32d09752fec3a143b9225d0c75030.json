{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/commentsPartials/CommentList.js\";\n\nimport React from 'react';\nimport { Button, FormGroup, Label, Input, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap';\n\nvar CommentList = function CommentList(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"comments-list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.comments.map(function (comment, index) {\n    console.log(\"username\", comment.user_name);\n    var editable = false;\n    if (props.user_id === comment.user_id) editable = true;\n    var date = comment.updated_at.substring(0, 10);\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"comments-list-item-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, props.editArray.includes(comment.id) && /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"comments-list-item-edit-form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"comments-list-item-edit-form-label\",\n      htmlFor: \"commentEditEntry\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 98\n      }\n    }, \"Edit Comment\")), /*#__PURE__*/React.createElement(Input, {\n      className: \"comments-list-item-edit-form-input\",\n      type: \"textarea\",\n      name: \"commentEditEntry\",\n      id: \"commentEditEntry\",\n      value: props.commentEditEntry,\n      onChange: function onChange(e) {\n        return props.handleChangeEdit(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"comments-list-item-edit-form-submit\",\n      onClick: function onClick() {\n        return props.updateComment(comment.id, comment.trail_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Update\")), !props.editArray.includes(comment.id) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroupItemText, {\n      className: \"comments-list-item-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-user-name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, comment.user_name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-date\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, date)), /*#__PURE__*/React.createElement(ListGroupItemText, {\n      className: \"comments-list-item-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, comment.post)), editable && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"comments-list-item-edit-button\",\n      onClick: function onClick() {\n        return props.handleEditClick(comment.id, comment.post);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, props.editArray.includes(comment.id) && \"Cancel\", !props.editArray.includes(comment.id) && \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"comments-list-item-delete-button\",\n      alt: \"delete comment\",\n      color: \"danger\",\n      onClick: function onClick() {\n        return props.deleteComment(comment.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  })));\n};\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/partials/commentsPartials/CommentList.js"],"names":["React","Button","FormGroup","Label","Input","ListGroup","ListGroupItem","ListGroupItemText","CommentList","props","comments","map","comment","index","console","log","user_name","editable","user_id","date","updated_at","substring","editArray","includes","id","commentEditEntry","e","handleChangeEdit","updateComment","trail_id","post","handleEditClick","deleteComment"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, FormGroup, Label, Input, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap'\n\n\nconst CommentList = props => {\n  return(\n    <>\n      <ListGroup className=\"comments-list-group\">\n      { props.comments.map((comment, index)=> {\n        console.log(\"username\", comment.user_name)\n        let editable = false\n          if(props.user_id === comment.user_id) editable = true\n          let date = comment.updated_at.substring(0,10)\n        return(\n          <ListGroupItem key={index} className=\"comments-list-item-wrapper\">\n            {props.editArray.includes(comment.id) &&\n              <FormGroup className=\"comments-list-item-edit-form-group\">\n                <Label className=\"comments-list-item-edit-form-label\" htmlFor=\"commentEditEntry\"><strong>Edit Comment</strong></Label>\n                <Input className=\"comments-list-item-edit-form-input\" type=\"textarea\" name=\"commentEditEntry\" id=\"commentEditEntry\" value={ props.commentEditEntry } onChange={ (e) => props.handleChangeEdit(e) }/>\n                <Button className=\"comments-list-item-edit-form-submit\" onClick={ () => props.updateComment(comment.id,comment.trail_id) }>Update</Button>\n              </FormGroup>\n            }\n            \n            {!props.editArray.includes(comment.id) &&\n              <>\n                <ListGroupItemText className=\"comments-list-item-title\">\n                  <span className=\"comment-user-name\">{ comment.user_name }</span> \n                  <span className=\"comment-date\">{ date }</span>\n                </ListGroupItemText>\n                <ListGroupItemText className=\"comments-list-item-text\">\n                  { comment.post }\n                </ListGroupItemText>\n              </>\n            }\n            \n            { editable &&\n              <>\n                <Button className=\"comments-list-item-edit-button\" onClick={ () => props.handleEditClick(comment.id,comment.post) }>\n                  {props.editArray.includes(comment.id) && \"Cancel\"}\n                  {!props.editArray.includes(comment.id) && \"Edit\"}\n                </Button>\n                <Button className=\"comments-list-item-delete-button\" alt=\"delete comment\" color=\"danger\" onClick={ () => props.deleteComment(comment.id) }>Delete</Button>\n              </>\n            }\n          </ListGroupItem>\n        )\n      })}\n      </ListGroup>\n    </>\n  )\n}\n\nexport default CommentList"]},"metadata":{},"sourceType":"module"}