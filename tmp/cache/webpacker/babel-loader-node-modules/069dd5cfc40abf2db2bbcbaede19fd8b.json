{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/UserActivity.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap';\nimport { Redirect, NavLink } from 'react-router-dom';\n\nvar UserActivity = function UserActivity(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activity = _useState2[0],\n      setActivity = _useState2[1];\n\n  useEffect(function () {\n    getActivity();\n  }, []);\n\n  function getActivity() {\n    return _getActivity.apply(this, arguments);\n  }\n\n  function _getActivity() {\n    _getActivity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var activityResponse, activityData, sortedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/users/comments');\n\n            case 3:\n              activityResponse = _context.sent;\n              _context.next = 6;\n              return activityResponse.json();\n\n            case 6:\n              activityData = _context.sent;\n\n              if (activityResponse.ok) {\n                sortedData = activityData.sort(function (a, b) {\n                  if (a.updated_at === b.updated_at) return 0;else if (a.updated_at > b.updated_at) return -1;else return 1;\n                });\n                setActivity(sortedData);\n                console.log(\"sorted Activity Data\", sortedData);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getActivity.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.user_id != props.match.params.id && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"user-activity-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"page-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Your Activity\"), /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"user-activity-list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, activity.map(function (comment, index) {\n    var date = comment.updated_at.substring(0, 10);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroupItem, {\n      className: \"user-activity-list-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItemText, {\n      className: \"user-activity-list-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"You commented on \", /*#__PURE__*/React.createElement(NavLink, {\n      className: \"user-activity-list-link\",\n      to: \"/trails/\".concat(comment.trail_id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 36\n      }\n    }, comment.trail_name), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 148\n      }\n    }, date)), /*#__PURE__*/React.createElement(ListGroupItemText, {\n      className: \"user-activity-list-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, comment.post)));\n  }))));\n};\n\nexport default UserActivity;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/CapStoneProject/app/javascript/components/pages/UserActivity.js"],"names":["React","useEffect","useState","Container","ListGroup","ListGroupItem","ListGroupItemText","Redirect","NavLink","UserActivity","props","activity","setActivity","getActivity","fetch","activityResponse","json","activityData","ok","sortedData","sort","a","b","updated_at","console","log","user_id","match","params","id","map","comment","index","date","substring","trail_id","trail_name","post"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,iBAA9C,QAAuE,YAAvE;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,kBAAlC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBACIR,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACrBS,QADqB;AAAA,MACXC,WADW;;AAG5BX,EAAAA,SAAS,CAAC,YAAK;AACbY,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAH4B,WAObA,WAPa;AAAA;AAAA;;AAAA;AAAA,4EAO5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEiCC,KAAK,CAAC,iBAAD,CAFtC;;AAAA;AAEQC,cAAAA,gBAFR;AAAA;AAAA,qBAG6BA,gBAAgB,CAACC,IAAjB,EAH7B;;AAAA;AAGQC,cAAAA,YAHR;;AAII,kBAAIF,gBAAgB,CAACG,EAArB,EAAyB;AACnBC,gBAAAA,UADmB,GACNF,YAAY,CAACG,IAAb,CAAkB,UAACC,CAAD,EAAGC,CAAH,EAAO;AACxC,sBAAID,CAAC,CAACE,UAAF,KAAiBD,CAAC,CAACC,UAAvB,EAAmC,OAAO,CAAP,CAAnC,KACK,IAAIF,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAArB,EAAiC,OAAO,CAAC,CAAR,CAAjC,KACA,OAAO,CAAP;AACN,iBAJgB,CADM;AAMvBX,gBAAAA,WAAW,CAACO,UAAD,CAAX;AACAK,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,UAApC;AACD;;AAZL;AAAA;;AAAA;AAAA;AAAA;AAcMK,cAAAA,OAAO,CAACC,GAAR;;AAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAP4B;AAAA;AAAA;;AAyB5B,sBACE,0CACGf,KAAK,CAACgB,OAAN,IAAiBhB,KAAK,CAACiB,KAAN,CAAYC,MAAZ,CAAmBC,EAApC,iBACG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,eAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACClB,QAAQ,CAACmB,GAAT,CAAa,UAACC,OAAD,EAASC,KAAT,EAAmB;AAC/B,QAAIC,IAAI,GAAGF,OAAO,CAACR,UAAR,CAAmBW,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAX;AACA,wBACE,uDACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,yBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,0BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACmB,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,yBAAnB;AAA6C,MAAA,EAAE,oBAAaH,OAAO,CAACI,QAArB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiFJ,OAAO,CAACK,UAAzF,CADnB,qBACmI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAL,CADnI,CAFF,eAME,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,yBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIF,OAAO,CAACM,IADZ,CANF,CADF,CADF;AAeD,GAjBA,CADD,CAFF,CAJF,CADF;AA8BD,CAvDD;;AAyDA,eAAe5B,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Container, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap'\nimport { Redirect, NavLink } from 'react-router-dom'\n\nconst UserActivity = props => {\n  const [activity, setActivity] = useState([])\n\n  useEffect(() =>{\n    getActivity()\n  },[])\n\n  async function getActivity() {\n    try {\n      let activityResponse = await fetch('/users/comments')\n      let activityData = await activityResponse.json()\n      if (activityResponse.ok) {\n        let sortedData = activityData.sort((a,b)=>{\n          if (a.updated_at === b.updated_at) return 0\n          else if (a.updated_at > b.updated_at) return -1\n          else return 1\n        })\n        setActivity(sortedData)\n        console.log(\"sorted Activity Data\", sortedData)\n      }\n    } catch (err) {\n        console.log(err)\n      }\n  }\n\n  return (\n    <>\n      {props.user_id != props.match.params.id &&\n          <Redirect to=\"/\" />\n        }\n      <Container className=\"user-activity-container\">\n        <h2 className=\"page-title\">Your Activity</h2>\n        <ListGroup className=\"user-activity-list-group\">\n        {activity.map((comment,index) => {\n          let date = comment.updated_at.substring(0,10)\n          return(\n            <>\n              <ListGroupItem className=\"user-activity-list-item\">\n\n                <ListGroupItemText className=\"user-activity-list-title\">\n                  You commented on <NavLink className=\"user-activity-list-link\" to={`/trails/${comment.trail_id}`}>{comment.trail_name}</NavLink>, <i>{ date }</i>\n                </ListGroupItemText>\n\n                <ListGroupItemText className=\"user-activity-list-text\">\n                  { comment.post }\n                </ListGroupItemText>\n\n              </ListGroupItem>\n            </>\n          )\n        })}\n        </ListGroup>\n      </Container>\n    </>\n  );\n}\n\nexport default UserActivity"]},"metadata":{},"sourceType":"module"}